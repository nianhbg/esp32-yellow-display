esphome:
  name: cyd
  friendly_name: cyd

esp32:
  board: esp32dev
  framework:
    type: arduino

substitutions:
  device_name: cyd
  friendly_name: cyd

  icon_font: icon_font
  text_font: roboto17_font
  lightbulb: "\U000F0335"
  lightbulb_outline: "\U000F0336"
  lightbulb_multi: "\U000F1253"
  lightbulb_multi_outline: "\U000F1254"
  # homeassistant entitys:
  btn_1: light.kitchen_shell1
  btn_2: light.kitchen_shell2
  btn_3: light.0x60b647fffe7a2a66
  btn_4:
  btn_5: light.matrum_gata_fonster
  btn_6: light.kitchen

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret api_key

  on_client_connected:
    - if:
        condition:
          lambda: 'return (0 == client_info.find("Home Assistant "));'
        then:
          - lvgl.widget.show: lbl_hastatus
  on_client_disconnected:
    - if:
        condition:
          lambda: 'return (0 == client_info.find("Home Assistant "));'
        then:
          - lvgl.widget.hide: lbl_hastatus

ota:
  - platform: esphome
    password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "cyd Fallback Hotspot"
    password: !secret wifi_password

captive_portal:

i2c:
  - sda: 21
    scl: 22
    scan: true

spi:
  - id: tft
    clk_pin: 14
    mosi_pin: 13
    miso_pin: 12

output:
  - id: backlight_ctrl
    platform: gpio
    pin: 27
    inverted: false
  - id: output_red
    platform: ledc
    pin: 4
    inverted: true
  - id: output_green
    platform: ledc
    pin: 16
    inverted: true
  - id: output_blue
    platform: ledc
    pin: 17
    inverted: true

light:
  - platform: binary
    id: display_backlight
    name: Display Backlight
    output: backlight_ctrl
    restore_mode: ALWAYS_ON
  - platform: rgb
    id: rgb_led
    name: RGB LED
    red: output_red
    green: output_green
    blue: output_blue
    restore_mode: ALWAYS_OFF

font:
  - file: "fonts/Arimo-Regular.ttf"
    id: my_font
    size: 20

  - file: "gfonts://Roboto"
    id: roboto17_font
    size: 17
    bpp: 4

  - file: "gfonts://Roboto"
    id: roboto15_font
    size: 15
    bpp: 4

  - file: "https://github.com/Templarian/MaterialDesign-Webfont/raw/v7.4.47/fonts/materialdesignicons-webfont.ttf"
    id: icon_font
    size: 42
    bpp: 4
    glyphs: [
        "\U000F0335", # mdi-lightbulb
        "\U000F0336", # mdi-lightbulb-outline
        "\U000F1253", # mdi-lightbulb-multi
        "\U000F1254", # mdi-lightbulb-multi-outline
      ]

number:
  - platform: template
    name: LVGL Screen timeout
    optimistic: true
    id: display_timeout
    unit_of_measurement: "s"
    initial_value: 45
    restore_value: true
    min_value: 10
    max_value: 180
    step: 5
    mode: box

text_sensor:
  - platform: homeassistant
    id: ts_remote_light_gata_fonster
    entity_id: $btn_5
    on_value:
      then:
        - lvgl.widget.update:
            id: btn_5
            state:
              checked: !lambda return (0 == x.compare(std::string{"on"}));
              disabled: !lambda return ((0 == x.compare(std::string{"unavailable"})) or (0 == x.compare(std::string{"unknown"})));
        - lvgl.label.update:
            id: label_btn_5
            text: !lambda |-
              static char buf[10];
              std::string icon;
              if (0 == x.compare(std::string{"on"})) {
                  icon = "\U000F0335";
              } else {
                  icon = "\U000F0336";
              }
              snprintf(buf, sizeof(buf), "%s", icon.c_str());
              return buf;

  - platform: homeassistant
    id: ts_remote_light_hylla_kok
    entity_id: $btn_1
    on_value:
      then:
        - lvgl.widget.update:
            id: btn_1
            state:
              checked: !lambda return (0 == x.compare(std::string{"on"}));
              disabled: !lambda return ((0 == x.compare(std::string{"unavailable"})) or (0 == x.compare(std::string{"unknown"})));
        - lvgl.label.update:
            id: label_btn_1
            text: !lambda |-
              static char buf[10];
              std::string icon;
              if (0 == x.compare(std::string{"on"})) {
                  icon = "\U000F0335";
              } else {
                  icon = "\U000F0336";
              }
              snprintf(buf, sizeof(buf), "%s", icon.c_str());
              return buf;

  - platform: homeassistant
    id: ts_remote_light2_hylla_kok
    entity_id: btn_2
    on_value:
      then:
        - lvgl.widget.update:
            id: btn_2
            state:
              checked: !lambda return (0 == x.compare(std::string{"on"}));
              disabled: !lambda return ((0 == x.compare(std::string{"unavailable"})) or (0 == x.compare(std::string{"unknown"})));
        - lvgl.label.update:
            id: label_btn_2
            text: !lambda |-
              static char buf[10];
              std::string icon;
              if (0 == x.compare(std::string{"on"})) {
                  icon = "\U000F0335";
              } else {
                  icon = "\U000F0336";
              }
              snprintf(buf, sizeof(buf), "%s", icon.c_str());
              return buf;

  - platform: homeassistant
    id: ts_remote_light3_skap_kok
    entity_id: btn_3
    on_value:
      then:
        - lvgl.widget.update:
            id: btn_3
            state:
              checked: !lambda return (0 == x.compare(std::string{"on"}));
              disabled: !lambda return ((0 == x.compare(std::string{"unavailable"})) or (0 == x.compare(std::string{"unknown"})));
        - lvgl.label.update:
            id: label_btn_3
            text: !lambda |-
              static char buf[10];
              std::string icon;
              if (0 == x.compare(std::string{"on"})) {
                  icon = "\U000F0335";
              } else {
                  icon = "\U000F0336";
              }
              snprintf(buf, sizeof(buf), "%s", icon.c_str());
              return buf;

  - platform: homeassistant
    id: ts_remote_light_all_kok
    entity_id: $btn_6
    on_value:
      then:
        - lvgl.widget.update:
            id: btn_6
            state:
              checked: !lambda return (0 == x.compare(std::string{"on"}));
              disabled: !lambda return ((0 == x.compare(std::string{"unavailable"})) or (0 == x.compare(std::string{"unknown"})));
        - lvgl.label.update:
            id: label_btn_6
            text: !lambda |-
              static char buf[10];
              std::string icon;
              if (0 == x.compare(std::string{"on"})) {
                  icon = "\U000F1253";
              } else {
                  icon = "\U000F1254";
              }
              snprintf(buf, sizeof(buf), "%s", icon.c_str());
              return buf;

# Display Configuration
display:
  - id: my_display
    platform: ili9xxx
    model: TFT 2.4R
    spi_id: tft
    cs_pin:
      number: 15
      ignore_strapping_warning: true
    dc_pin:
      number: 2
      ignore_strapping_warning: true
    invert_colors: false
    color_palette: 8BIT
    color_order: RGB
    update_interval: never #60s # Or 60000ms. This will redraw the screen every minute.
    auto_clear_enabled: false
    rotation: 90
    dimensions:
      height: 240
      width: 320

touchscreen:
  - id: my_touchscreen
    platform: xpt2046
    cs_pin: 33
    calibration:
      x_min: 0
      x_max: 3860
      y_min: 0
      y_max: 3860
    transform:
      swap_xy: true
      mirror_x: true
      mirror_y: false
    on_release:
      - if:
          condition: lvgl.is_paused
          then:
            - logger.log: "LVGL resuming"
            - lvgl.resume:
            - lvgl.widget.redraw:
            - light.turn_on: display_backlight

lvgl:
  buffer_size: 25%
  displays:
    - my_display
  touchscreens:
    - my_touchscreen
  bg_color: Black
  border_color: Black
  on_idle:
    timeout: 180s # !lambda "return (id(display_timeout).state * 1000);"
    then:
      - logger.log: "LVGL is idle"
      - light.turn_off: display_backlight
      - lvgl.pause:

  top_layer:
    widgets:
      - label:
          text: "\uF1EB"
          id: lbl_hastatus
          hidden: true
          align: top_right
          x: -2
          y: 7
          text_align: right
          text_color: 0xFFFFFF

      - label:
          text: $device_name
          id: lbl_device_name
          hidden: false
          align: top_left
          x: 2
          y: 5
          text_font: my_font
          text_align: left
          text_color: 0xFFFFFF

      - buttonmatrix:
          align: bottom_mid
          styles: header_footer
          pad_all: 0
          outline_width: 0
          id: top_layer
          items:
            styles: header_footer
          rows:
            - buttons:
                - id: page_prev
                  text: "\uF053"
                  on_press:
                    then:
                      lvgl.page.previous:
                - id: page_home
                  text: "\uF015"
                  on_press:
                    then:
                      lvgl.page.show: main_page
                - id: page_next
                  text: "\uF054"
                  on_press:
                    then:
                      lvgl.page.next:

  style_definitions:
    - id: roboto15_style
      text_font: roboto15_font

    - id: control
      bg_color: $button_control_color

    - id: header_footer
      bg_color: 0x000000
      radius: 0
      pad_all: 0
      pad_row: 0
      pad_column: 0
      border_color: 0x000000
      text_color: 0xFFFFFF
      width: 100%
      height: 30

  pages:
    - id: main_page
      widgets:
        - obj:
            width: 240
            height: 320
            bg_color: 0x000000
            border_color: 0x000000
            pad_top: 30
            pad_bottom: 40
            pad_left: 5
            pad_right: 5
            layout:
              type: GRID
              grid_columns: [FR(1), FR(1)]
              grid_rows: [FR(1), FR(1), FR(1)]
            widgets:
              - button:
                  checkable: true
                  id: btn_1
                  grid_cell_column_pos: 0
                  grid_cell_row_pos: 0
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  widgets:
                    - label:
                        id: label_btn_1
                        align: CENTER
                        text_font: icon_font
                        text: $lightbulb_outline
                  on_short_click:
                    - homeassistant.action:
                        action: light.toggle
                        data:
                          entity_id: $btn_1

              - button:
                  checkable: true
                  id: btn_3
                  grid_cell_column_pos: 0
                  grid_cell_row_pos: 1
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  widgets:
                    - label:
                        id: label_btn_3
                        align: CENTER
                        text_font: icon_font
                        text: $lightbulb_outline
                  on_short_click:
                    - homeassistant.action:
                        action: light.toggle
                        data:
                          entity_id: $btn_3

              - button:
                  checkable: true
                  id: btn_5
                  grid_cell_column_pos: 0
                  grid_cell_row_pos: 2
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  widgets:
                    - label:
                        id: label_btn_5
                        align: CENTER
                        text_font: icon_font
                        text: $lightbulb_outline
                  on_short_click:
                    - homeassistant.action:
                        action: light.toggle
                        data:
                          entity_id: $btn_5

              - button:
                  checkable: true
                  id: btn_2
                  grid_cell_column_pos: 1
                  grid_cell_row_pos: 0
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  widgets:
                    - label:
                        id: label_btn_2
                        align: CENTER
                        text_font: icon_font
                        text: $lightbulb_outline

                  on_short_click:
                    - homeassistant.action:
                        action: light.toggle
                        data:
                          entity_id: $btn_2

              - button:
                  checkable: true
                  id: btn4
                  grid_cell_column_pos: 1
                  grid_cell_row_pos: 1
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  widgets:
                    - label:
                        id: label_btn_4
                        align: CENTER
                        text_font: icon_font
                        text: $lightbulb_outline

              - button:
                  checkable: true
                  id: btn_6
                  grid_cell_column_pos: 1
                  grid_cell_row_pos: 2
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  widgets:
                    - label:
                        id: label_btn_6
                        align: CENTER
                        text_font: icon_font
                        text: "\U000F1254"
                  on_short_click:
                    - homeassistant.action:
                        action: light.toggle
                        data:
                          entity_id: $btn_6

    - id: kitchen_page
      widgets:
        - label:
            text_font: roboto17_font
            align: top_left
            text: "Hello N"
            id: _hello
